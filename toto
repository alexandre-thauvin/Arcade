==13824== Memcheck, a memory error detector
==13824== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13824== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==13824== Command: ./arcade
==13824== 
==13824== Syscall param writev(vector[...]) points to uninitialised byte(s)
==13824==    at 0x56D940D: ??? (syscall-template.S:84)
==13824==    by 0x9F8BF28: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==13824==    by 0x9F8C31C: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==13824==    by 0x9F8C3A4: xcb_writev (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==13824==    by 0x6F904AD: _XSend (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==13824==    by 0x6F909A1: _XReply (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==13824==    by 0x6F7B59E: XInternAtom (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==13824==    by 0x637CAEA: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==    by 0x637D8F1: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==    by 0x636F148: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==    by 0x636EF34: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==    by 0x62D6396: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==  Address 0x5cf2fe3 is 35 bytes inside a block of size 16,384 alloc'd
==13824==    at 0x4C2FB55: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13824==    by 0x6F80692: XOpenDisplay (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==13824==    by 0x637BDB4: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==    by 0x636EEE0: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==    by 0x62D6396: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.0)
==13824==    by 0x60B6807: arcade::GfxSDL::GfxSDL(arcade::Vector2<unsigned int> const&) (in /home/cedric/workTek2/cpp_arcade/lib/lib_arcade_sdl.so)
==13824==    by 0x60B72F7: createLib (in /home/cedric/workTek2/cpp_arcade/lib/lib_arcade_sdl.so)
==13824==    by 0x407CE5: Loader<arcade::IGFX>::getInstance(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arcade::Vector2<unsigned int>) (Loader.hpp:50)
==13824==    by 0x405DA1: arcade::Core::loadGfx(int) (Core.cpp:339)
==13824==    by 0x404184: arcade::Core::init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Core.cpp:87)
==13824==    by 0x4020B7: main (main.cpp:36)
==13824== 
==13824== Conditional jump or move depends on uninitialised value(s)
==13824==    at 0x60B6EF1: arcade::GfxSDL::getInput() (in /home/cedric/workTek2/cpp_arcade/lib/lib_arcade_sdl.so)
==13824==    by 0x404514: arcade::Core::play() (Core.cpp:109)
==13824==    by 0x404388: arcade::Core::init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Core.cpp:97)
==13824==    by 0x4020B7: main (main.cpp:36)
==13824== 
==13824== Invalid read of size 8
==13824==    at 0x1C3E65A2: arcade::Map::getPosBlock(arcade::Vector2<unsigned int> const&) const (in /home/cedric/workTek2/cpp_arcade/games/lib_arcade_centipede.so)
==13824==    by 0x1C3E3D06: arcade::Centipede::move_centi() (in /home/cedric/workTek2/cpp_arcade/games/lib_arcade_centipede.so)
==13824==    by 0x1C3E33A0: arcade::Centipede::updateGame() (in /home/cedric/workTek2/cpp_arcade/games/lib_arcade_centipede.so)
==13824==    by 0x404626: arcade::Core::play() (Core.cpp:121)
==13824==    by 0x404388: arcade::Core::init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Core.cpp:97)
==13824==    by 0x4020B7: main (main.cpp:36)
==13824==  Address 0x8114e6858 is not stack'd, malloc'd or (recently) free'd
==13824== 
==13824== 
==13824== Process terminating with default action of signal 11 (SIGSEGV)
==13824==  Access not within mapped region at address 0x8114E6858
==13824==    at 0x1C3E65A2: arcade::Map::getPosBlock(arcade::Vector2<unsigned int> const&) const (in /home/cedric/workTek2/cpp_arcade/games/lib_arcade_centipede.so)
==13824==    by 0x1C3E3D06: arcade::Centipede::move_centi() (in /home/cedric/workTek2/cpp_arcade/games/lib_arcade_centipede.so)
==13824==    by 0x1C3E33A0: arcade::Centipede::updateGame() (in /home/cedric/workTek2/cpp_arcade/games/lib_arcade_centipede.so)
==13824==    by 0x404626: arcade::Core::play() (Core.cpp:121)
==13824==    by 0x404388: arcade::Core::init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Core.cpp:97)
==13824==    by 0x4020B7: main (main.cpp:36)
==13824==  If you believe this happened as a result of a stack
==13824==  overflow in your program's main thread (unlikely but
==13824==  possible), you can try to increase the size of the
==13824==  main thread stack using the --main-stacksize= flag.
==13824==  The main thread stack size used in this run was 8388608.
==13824== 
==13824== HEAP SUMMARY:
==13824==     in use at exit: 36,925,097 bytes in 49,929 blocks
==13824==   total heap usage: 133,059 allocs, 83,130 frees, 83,824,779 bytes allocated
==13824== 
==13824== LEAK SUMMARY:
==13824==    definitely lost: 4,986,840 bytes in 104 blocks
==13824==    indirectly lost: 3,244,670 bytes in 74 blocks
==13824==      possibly lost: 28,047,861 bytes in 48,127 blocks
==13824==    still reachable: 645,726 bytes in 1,624 blocks
==13824==         suppressed: 0 bytes in 0 blocks
==13824== Rerun with --leak-check=full to see details of leaked memory
==13824== 
==13824== For counts of detected and suppressed errors, rerun with: -v
==13824== Use --track-origins=yes to see where uninitialised values come from
==13824== ERROR SUMMARY: 26474 errors from 3 contexts (suppressed: 0 from 0)
